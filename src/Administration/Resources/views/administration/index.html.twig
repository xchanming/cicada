{% extends '@Administration/administration/layout/base.html.twig' %}

{% block administration_head_scripts %}
    <script nonce="{{ cspNonce }}" type="text/javascript">
        window._features_ = {{ features|json_encode|raw }};

        window.__sw__ = {
            assetPath: '{{ asset('', 'asset') }}',
        };
    </script>
{% endblock %}

{% block administration_content %}
    <div id="app"></div>

    {% block administration_templates %}{% endblock %}

    {% if feature('ADMIN_VITE') %}
        {{ vite_entry_script_tags('administration', { attr: { nonce: cspNonce } }) }}
    {% else %}
        <script nonce="{{ cspNonce }}" src="{{ asset('static/js/app.js', '@Administration') }}"></script>
    {% endif %}

    {% block administration_login_scripts %}{% endblock %}

    <script nonce="{{ cspNonce }}">
        {#
        root-level domain configuration

        host:               cicada.next
        port:               80
        scheme:             http
        schemeAndHttpHost:  http://cicada.next
        uri:                http://cicada.next/admin
        basePath:
        pathInfo:           /admin

        -----------------------------------------------

        sub-folder domain configuration

        host:               localhost
        port:               80
        scheme:             http
        schemeAndHttpHost:  http://localhost
        uri:                http://localhost/next/web/admin
        basePath:           /next/web
        pathInfo:           /admin
        #}

        {% if feature('ADMIN_VITE') %}
        {# window.startApplication is called in index.vite.ts #}
        window.startApplication = () => {
            Cicada.Application.start({
                apiContext: {
                    host: '{{ app.request.host }}',
                    port: {{ app.request.port }},
                    scheme: '{{ app.request.scheme }}',
                    schemeAndHttpHost: '{{ app.request.schemeAndHttpHost }}',
                    uri: '{{ app.request.uri }}',
                    basePath: '{{ app.request.basePath }}',
                    pathInfo: '{{ app.request.pathInfo }}',
                    liveVersionId: '{{ liveVersionId }}',
                    systemLanguageId: '{{ systemLanguageId }}',
                    apiVersion: {{ apiVersion }},
                    assetPath: '{{ asset('', 'asset') }}'
                },
                appContext: {
                    features: window._features_,
                    firstRunWizard: {{ firstRunWizard ? 'true' : 'false' }},
                    systemCurrencyId: '{{ systemCurrencyId }}',
                    systemCurrencyISOCode: '{{ systemCurrencyISOCode }}',
                    // @deprecated tag:v6.7.0 - remove as read-only extension manager is a better solution
                    disableExtensions: {{ disableExtensions ? 'true' : 'false' }},
                    adminEsEnable: {{ adminEsEnable ? 'true' : 'false' }},
                    storefrontEsEnable: {{ storefrontEsEnable ? 'true' : 'false' }},
                }
            });
        };
        {% else %}
        Cicada.Application.start({
            apiContext: {
                host: '{{ app.request.host }}',
                port: {{ app.request.port }},
                scheme: '{{ app.request.scheme }}',
                schemeAndHttpHost: '{{ app.request.schemeAndHttpHost }}',
                uri: '{{ app.request.uri }}',
                basePath: '{{ app.request.basePath }}',
                pathInfo: '{{ app.request.pathInfo }}',
                liveVersionId: '{{ liveVersionId }}',
                systemLanguageId: '{{ systemLanguageId }}',
                apiVersion: {{ apiVersion }},
                assetPath: '{{ asset('', 'asset') }}',
                refreshTokenTtl: {{ refreshTokenTtl }},
            },
            appContext: {
                features: window._features_,
                firstRunWizard: {{ firstRunWizard ? 'true' : 'false' }},
                systemCurrencyId: '{{ systemCurrencyId }}',
                systemCurrencyISOCode: '{{ systemCurrencyISOCode }}',
                // @deprecated tag:v6.7.0 - remove as read-only extension manager is a better solution
                disableExtensions: {{ disableExtensions ? 'true' : 'false' }},
                adminEsEnable: {{ adminEsEnable ? 'true' : 'false' }},
                storefrontEsEnable: {{ storefrontEsEnable ? 'true' : 'false' }},
            }
        });
        {% endif %}
    </script>
{% endblock %}
