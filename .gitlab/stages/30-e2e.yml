# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json
# requires /.gitlab/base.yml

acceptance:
  extends:
    - .long-running
  image: mcr.microsoft.com/playwright:v1.49.1-jammy
  needs: [build image]
  tags:
    - cicada-amd64
  stage: E2E
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "merge_train"'
      changes:
        - "tests/acceptance/**/*"
    - !reference [.rules, skip]
    - !reference [.rules, run]
    - !reference [.rules, long-running]
  services:
    - name: mysql:8
      alias: database
      pull_policy: always
      entrypoint:
        [
          "sh",
          "-c",
          "docker-entrypoint.sh mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql-require-primary-key=ON",
        ]
    - name: redis:7.0
      alias: redis
    - name: "${CI_REGISTRY_IMAGE}/ci-e2e:$CI_PIPELINE_ID"
      alias: cicada.test
  variables:
    APP_ENV: prod
    CICADA_HTTP_CACHE_ENABLED: 0
    CICADA_DISABLE_UPDATE_CHECK: "true"
    PROJECT_ROOT: /var/www/html
    DATABASE_URL: mysql://root:app@database:3306/root
    APP_URL: http://cicada.test:8000
    ACCEPTANCE_PROJECT: Platform
    KUBERNETES_SERVICE_CPU_REQUEST: "500m"
    KUBERNETES_SERVICE_CPU_LIMIT: "2"
    KUBERNETES_SERVICE_MEMORY_REQUEST: "512Mi"
    KUBERNETES_SERVICE_MEMORY_LIMIT: "2Gi"
    PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
  before_script:
    - cd tests/acceptance
    - npm ci
  script:
    - npx playwright test --workers=1 --project=${ACCEPTANCE_PROJECT}
  after_script:
    - |
      echo "Link to HTML report"
      echo "-------------------------------------------------------------------------------------------------------------------------------------------------------"
      echo "https://cicada.pages.apps.cicada.io/-/6/product/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/tests/acceptance/playwright-report/index.html"
      echo "-------------------------------------------------------------------------------------------------------------------------------------------------------"
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - $CI_PROJECT_DIR/tests/acceptance/test-results/*
      - $CI_PROJECT_DIR/tests/acceptance/playwright-report/*

acceptance (changed):
  extends: acceptance
  needs: [acceptance]
  parallel:
    matrix:
      - _DUMMY_VAR: ["dummy1", "dummy2", "dummy3", "dummy4", "dummy5"]
  rules:
    - !reference [.rules, skip]
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "merge_train"'
      changes:
        - "tests/acceptance/tests/**/*.spec.ts"
  script:
    - 'export CHANGED_FILES="$(git diff --diff-filter=ACMRT --name-only ${CI_MERGE_REQUEST_DIFF_BASE_SHA} | grep -E \"^tests/acceptance/tests/\")"'
    - 'echo "Changed files: $CHANGED_FILES"'
    - >
      if [[ -z "${CHANGED_FILES}" ]]; then
        printf "No changed test files found.\n"
        exit 0
      fi
    # remove prefix tests/acceptance/
    - 'TEST_SPEC=$(echo "${CHANGED_FILES}" | sed "s|^tests/acceptance/||g")'
    - 'echo "Test spec: $TEST_SPEC"'
    - npx playwright test --workers=2 --repeat-each 10 --retries 0 --trace retain-on-failure --project Platform -- $TEST_SPEC

install test:
  extends: acceptance
  variables:
    ACCEPTANCE_PROJECT: Install
    APP_ENV: dev
    CICADA_HTTP_CACHE_ENABLED: 0
    CICADA_DISABLE_UPDATE_CHECK: "true"
    PROJECT_ROOT: /var/www/html
    APP_URL: http://cicada.test:8000
    DATABASE_URL: mysql://root:app@database:3306/install_test
    TEST_WEB_INSTALLER: 1 # skip automatic setup
    CICADA_SKIP_WEBINSTALLER: 0 # we want to test the web installer/updater
